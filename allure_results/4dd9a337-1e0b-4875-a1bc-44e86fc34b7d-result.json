{"name": "Тест на отображение заказа пользователя на странице \"Дента заказов\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5d95bcadec7a <unknown>\n#1 0x5d95bc7c1e2c <unknown>\n#2 0x5d95bc80e661 <unknown>\n#3 0x5d95bc80e751 <unknown>\n#4 0x5d95bc852f64 <unknown>\n#5 0x5d95bc8315ed <unknown>\n#6 0x5d95bc850303 <unknown>\n#7 0x5d95bc831363 <unknown>\n#8 0x5d95bc801247 <unknown>\n#9 0x5d95bc801b9e <unknown>\n#10 0x5d95bcaa524b <unknown>\n#11 0x5d95bcaa92f1 <unknown>\n#12 0x5d95bca90afe <unknown>\n#13 0x5d95bcaa9e52 <unknown>\n#14 0x5d95bca7579f <unknown>\n#15 0x5d95bcace638 <unknown>\n#16 0x5d95bcace810 <unknown>\n#17 0x5d95bcadddac <unknown>\n#18 0x7cb85b29ca94 <unknown>\n#19 0x7cb85b329c3c <unknown>", "trace": "self = <tests.test_order_feed.TestOrderFeed object at 0x79ec143c6f60>\ncreate_user_and_authorization = ('oleqrezni4enko@yandex.ru', 'olegoleg', 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2YmE4MjM2OWVkMjgwMDAxYjQ4ZDNjMCIsImlhdCI6MTcyMzQ5OTA2MiwiZXhwIjoxNzIzNTAwMjYyfQ.RfmI50olNV3eFXjv-nY0ps8Ho4OrExDium8jETIbrpI')\ncreate_order = 105379, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3cdb87fef1e5e8ca61dfcc51f229b258\")>\n\n    @allure.title('Тест на отображение заказа пользователя на странице \"Дента заказов\"')\n    def test_displayed_user_order_inorder_feed(self, create_user_and_authorization, create_order, driver):\n        order_page = OrderFeedPage(driver)\n        number = create_order\n        order_number = '#0' + str(number)\n        order_page.open_order_feed()\n>       assert order_page.check_order_number(origin_number=order_number)\n\ntests/test_order_feed.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/order_feed_page.py:23: in check_order_number\n    order_number = self.get_text_element(locator=OrderFeedLocators.FIRST_ORDER_NUMBER)\npages/base_page.py:46: in get_text_element\n    return self.wait.until(ec.visibility_of_element_located(locator)).text\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3cdb87fef1e5e8ca61dfcc51f229b258\")>, method = <function visibility_of_element_located.<locals>._predicate at 0x79ec1440fb00>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5d95bcadec7a <unknown>\nE       #1 0x5d95bc7c1e2c <unknown>\nE       #2 0x5d95bc80e661 <unknown>\nE       #3 0x5d95bc80e751 <unknown>\nE       #4 0x5d95bc852f64 <unknown>\nE       #5 0x5d95bc8315ed <unknown>\nE       #6 0x5d95bc850303 <unknown>\nE       #7 0x5d95bc831363 <unknown>\nE       #8 0x5d95bc801247 <unknown>\nE       #9 0x5d95bc801b9e <unknown>\nE       #10 0x5d95bcaa524b <unknown>\nE       #11 0x5d95bcaa92f1 <unknown>\nE       #12 0x5d95bca90afe <unknown>\nE       #13 0x5d95bcaa9e52 <unknown>\nE       #14 0x5d95bca7579f <unknown>\nE       #15 0x5d95bcace638 <unknown>\nE       #16 0x5d95bcace810 <unknown>\nE       #17 0x5d95bcadddac <unknown>\nE       #18 0x7cb85b29ca94 <unknown>\nE       #19 0x7cb85b329c3c <unknown>\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "start": 1723499085382, "stop": 1723499096188, "uuid": "50fd3a85-af18-42c0-ac50-dd970af3d8a3", "historyId": "ec67e541669977a6ca9d9c9117b13cbf", "testCaseId": "ec67e541669977a6ca9d9c9117b13cbf", "fullName": "tests.test_order_feed.TestOrderFeed#test_displayed_user_order_inorder_feed", "labels": [{"name": "epic", "value": "Группа тестов на раздел \"Лента заказов\" "}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "oleg-BOM-WXX9"}, {"name": "thread", "value": "75294-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}
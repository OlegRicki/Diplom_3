{"name": "Тест на открытие странцы восстановления пароля", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5d95bcadec7a <unknown>\n#1 0x5d95bc7c1e2c <unknown>\n#2 0x5d95bc7c7539 <unknown>\n#3 0x5d95bc7c92e5 <unknown>\n#4 0x5d95bc7c936c <unknown>\n#5 0x5d95bc81531c <unknown>\n#6 0x5d95bc813246 <unknown>\n#7 0x5d95bc810c27 <unknown>\n#8 0x5d95bc80fa60 <unknown>\n#9 0x5d95bc80315f <unknown>\n#10 0x5d95bc8315c2 <unknown>\n#11 0x5d95bc802ad9 <unknown>\n#12 0x5d95bc83178e <unknown>\n#13 0x5d95bc850303 <unknown>\n#14 0x5d95bc831363 <unknown>\n#15 0x5d95bc801247 <unknown>\n#16 0x5d95bc801b9e <unknown>\n#17 0x5d95bcaa524b <unknown>\n#18 0x5d95bcaa92f1 <unknown>\n#19 0x5d95bca90afe <unknown>\n#20 0x5d95bcaa9e52 <unknown>\n#21 0x5d95bca7579f <unknown>\n#22 0x5d95bcace638 <unknown>\n#23 0x5d95bcace810 <unknown>\n#24 0x5d95bcadddac <unknown>\n#25 0x7cb85b29ca94 <unknown>\n#26 0x7cb85b329c3c <unknown>", "trace": "self = <tests.test_password_recovery.TestPasswordRecovery object at 0x79ec143c7b60>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3cdb87fef1e5e8ca61dfcc51f229b258\")>\n\n    @allure.title('Тест на открытие странцы восстановления пароля')\n    def test_open_page_password_recovery(self, driver):\n        recovery_page = PasswordRecoveryPage(driver)\n        recovery_page.open_login_page()\n>       recovery_page.click_to_link_password_recovery()\n\ntests/test_password_recovery.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/password_recovery_page.py:23: in click_to_link_password_recovery\n    self.click_to_element(locator=LoginPageLocators.LINK_PASSWORD_RECOVERY)\npages/base_page.py:18: in click_to_element\n    self.wait.until(ec.element_to_be_clickable(locator)).click()\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x79ec14963350>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#24 0x5d95bcadddac \\\\u003Cunknown>\\\\n#25 0x7cb85b29ca94 \\\\u003Cunknown>\\\\n#26 0x7cb85b329c3c \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome=127.0.6533.72); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5d95bcadec7a <unknown>\nE       #1 0x5d95bc7c1e2c <unknown>\nE       #2 0x5d95bc7c7539 <unknown>\nE       #3 0x5d95bc7c92e5 <unknown>\nE       #4 0x5d95bc7c936c <unknown>\nE       #5 0x5d95bc81531c <unknown>\nE       #6 0x5d95bc813246 <unknown>\nE       #7 0x5d95bc810c27 <unknown>\nE       #8 0x5d95bc80fa60 <unknown>\nE       #9 0x5d95bc80315f <unknown>\nE       #10 0x5d95bc8315c2 <unknown>\nE       #11 0x5d95bc802ad9 <unknown>\nE       #12 0x5d95bc83178e <unknown>\nE       #13 0x5d95bc850303 <unknown>\nE       #14 0x5d95bc831363 <unknown>\nE       #15 0x5d95bc801247 <unknown>\nE       #16 0x5d95bc801b9e <unknown>\nE       #17 0x5d95bcaa524b <unknown>\nE       #18 0x5d95bcaa92f1 <unknown>\nE       #19 0x5d95bca90afe <unknown>\nE       #20 0x5d95bcaa9e52 <unknown>\nE       #21 0x5d95bca7579f <unknown>\nE       #22 0x5d95bcace638 <unknown>\nE       #23 0x5d95bcace810 <unknown>\nE       #24 0x5d95bcadddac <unknown>\nE       #25 0x7cb85b29ca94 <unknown>\nE       #26 0x7cb85b329c3c <unknown>\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException"}, "start": 1723499106808, "stop": 1723499107188, "uuid": "e9a4d3e6-ea60-4ba3-b084-db4e6e32d312", "historyId": "29c0c9ac7e9af26ed86e78e378b92df1", "testCaseId": "29c0c9ac7e9af26ed86e78e378b92df1", "fullName": "tests.test_password_recovery.TestPasswordRecovery#test_open_page_password_recovery", "labels": [{"name": "epic", "value": "Группа тестов на Восстановление пароля"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_password_recovery"}, {"name": "subSuite", "value": "TestPasswordRecovery"}, {"name": "host", "value": "oleg-BOM-WXX9"}, {"name": "thread", "value": "75294-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_password_recovery"}]}